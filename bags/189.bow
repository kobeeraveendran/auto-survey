r g l s c v v x r summarizing event sequences serial episodes statistical model application soumyajit mitra p s sastry abstract paper address problem discovering small set frequent serial episodes sequential data adequately characterize summarize data discuss algorithm based minimum description length mdl principle algorithm slight modication earlier method called present novel generative model sequence data containing prominent pairs serial episodes provide statistical justication algorithm believe rst instance statistical justication mdl based algorithm summarizing event sequence data present novel application data mining algorithm text classication considering text documents temporal sequences words data mining algorithm nd set characteristic episodes training data words characteristic episodes considered relevant words dictionary resulting considerably reduced feature vector dimension simulation experiments benchmark data sets discovered frequent episodes achieve fold reduction dictionary size losing classication accuracy index terms frequent episodes mdl principle compressing frequent patterns hmm models episodes dictionary learning text classication introduction f requent pattern mining important problem data mining applications diverse domains frequently occurring local patterns capture useful pects semantics data practice mined frequent patterns large number redundant nature makes difcult effectively use isolating small set non redundant informative frequent patterns best describes data interesting current research problem paper concerned mining sequential data framework frequent episodes address problem isolating small set redundant serial episodes best characterize data recent efforts extracting small subset non redundant characteristic patterns mainly families methods family methods retain patterns sense tistically signicant statistical signicance assessed suitable null model hypothesis testing framework tting generative model data source reduce number frequent patterns extent approach tackle redundancy discovered patterns prominent family methods deciding subset patterns best explains data based information theoretic approach called minimum scription length mdl principle context problem isolating best subset frequent patterns soumyajit mitra department electrical engineering indian institute science bangalore india currently samsung bangalore india e mail com p s sastry department electrical engineering indian institute science bangalore india e mail ac use mdl principle explained follows formulate mechanism given subset frequent patterns use model encode data subset results overall best level data compression considered subset best characterizes data view motivated mdl principle found effective frequent pattern mining algorithms mdl principle views learning data compression able discover important regularities data able use compress data view coding mechanism lossless original data exactly recoverable given encoded compressed representation krimp algorithm rst methods mdl principle identify small set vant patterns context frequent itemset mining mentioned earlier paper concerned sequential data sequential data unlike case transaction data temporal ordering data tuples important encoding mechanism able recover original data sequence correct order time stamps presents additional complications encoding sequential data frequent patterns discussion mdl motivated algorithms proposed characterizing sequence data subset frequent patterns different algorithms use different strategies coding data frequent patterns methods motivated mdl principle coding gies computation compression achieved given subset frequent patterns essentially arbitrary paper consider recently proposed algorithm called efcient method discover subset serial episodes best characterizes data event sequences uses novel pattern class consisting injective serial episodes xed inter event times similar pattern class recently ing association rules temporal data algorithm uses number distinct occurrences episode frequency extend case non overlapped occurrences episode frequency provide statistical justication algorithm based generative model main contribution paper hmm based generative model provides statistical tion algorithm mdl based approaches subset patterns selected based data pression achieve depends arbitrary coding scheme algorithm selected heuristically paper provide justication coding scheme algorithm based proposed statistical generative model rst time knowledge formal connection established mining episodes mdl principle generative model data source generative model markovian handle non overlapped occurrences based episode frequency extended use non overlapped occurrences episode frequency major contribution paper novel plication method discovering set characteristic episodes sequential data application text sication text classication methods represent document vector dictionary words called bag words representation dictionary taken words corpus propriate stemming dropping stop words dictionary sizes large resulting high dimensionality feature vectors representing individual documents text document viewed sequence events event types words method discover subset characteristic episodes best represent corpus document data use words event types subset discovered episodes form dictionary method need frequency threshold constitutes parameter unsupervised method feature selection problem empirical experiments method results signicant reduction dictionary size loss classication accuracy rest paper organized follows section ii describes episode mining algorithm section iii presents proposed generative model section iv explains method nding smaller sized dictionary text sication problems reports results obtained different text datasets conclusions presented section v discovering best subset serial episodes episodes event sequences begin brief informal description episodes framework details data abstractly viewed event sequence denoted d en tn tuple event ei ti ei event type ti time occurrence event ei e nite alphabet set ti example event sequence d d c e b c d b c e c b c patterns interest called episodes paper concerned serial episodes represent n serial episode event type ith event episode episode said injective event types episode distinct example b c node injective serial episode currence serial episode constituted events data sequence appropriate event types times occurrence correct order b c constitutes occurrence b c b c b occur note events constituting occurrence need contiguous data data mining problem discover frequently occurring episodes frequent episodes framework different frequency measures dened based counting different subsets occurrences mention frequencies relevant paper efcient algorithms discovering serial episodes frequency measures details different frequencies algorithms discovering rial episodes occurrences serial episode said non overlapped event occurrence tween events b c b c non overlapped occurrences b c b c occurrence episode overlaps earlier ones non overlapped frequency episode dened maximum number non overlapped occurrences episode event sequence occurrences said distinct share event occurrences distinct mum number distinct occurrences frequency interest method use special class serial episodes called xed interval serial episodes xed val serial episode denoted n prescribed gap times ith events occurrence example b c xed interval injective serial episode b c occurrence episode b c easy events constituting occurrence xed interval serial episode completely specied giving time occurrence rst event occurrences starting different times distinct episode injective event types episode different mining algorithm best subset interest discovering small set interval serial episodes best explains data use minimum description length mdl principle rank different subsets episodes total encoding length results use models encode data mdl encoding able recover original data completely considering sequential data means able recover data original sequence time stamps rst explain strategy coding data sequence episodes basic idea encode events constituting occurrence xed interval serial episode giving start times occurrence encoding strategy obtaining best subset episodes essentially use algorithm main difference use non overlapped frequency algorithm uses distinct occurrences frequency rst explain encoding scheme example briey explain algorithm details coding scheme algorithm table illustrates coding scheme encoding event sequence essentially arbitrarily lected episodes row species size description episode number occurrences episode start times occurrences rst row table species node episode b c occurrences starting time instants row codes events data constituting occurrences node episode similarly second row codes events specifying occurrences node episode row codes events specifying occurrence node episode suppose interested asking good subset episodes episodes specied table account events data coding mdl lossless row table occurrences node episode sure events data sequence covered easy given table recreate entire data sequence exactly table think rst columns coding model subset episodes columns coding data model length size table total encoded length subset episodes given subset episodes episodes rst rows table nd encoding like data adding occurrences node episodes needed fourth row table table event c coded rst second episode table intuitively better data compression overlaps parts data encoded different episodes selected set minimized better compression data choose episodes high frequency cover large number events non redundant overlaps mentioned reduced intuitive reason coding scheme looking subset episodes achieves best compression data table encoding event sequence size episode occurrences episode c c d b e b c list occurrences objective nd subset episodes encode data like best data compression poses counting length memory assume event types times occurrence integers integer takes unit memory let n node episode frequency f encoding row table need f units unit represent size episode n units represent event types episode n units representing inter event gaps unit frequency f units represent start times occurrences non overlapped distinct occurrences share events episode encodes fn events data need fn units memory want encode events data node episodes dene d fn f d conclude useful candidate selecting improve encoding length comparison trivial encoding node episodes true utility assessed respect add compression given selected episodes let fs set episodes size greater given fs let d denote total encoded length d encode events occurrences episodes fs episodes fs encode remaining events d episodes size given episodes let om denote number events data covered occurrences data sequence d dene overlap d fs d om fs p overlap score gives estimate extra ing efciency achieved selecting given set fs proved prop overlap d fs d d means given current set episodes fs adding fs episode positive overlap score reduce total encoded length algorithm essentially greedy algorithm keeps adding episodes highest overlap score greedy selection best episode based overlap score set candidate episodes generated search lattice serial episodes candidate episode best episode paths search tree sake completeness pseudocode algorithm algorithm details algorithm tg k algorithm find input d event sequence tg maximum inter event gap k maximum number selected episodes output set selected frequent episodes f initialize nal set selected episodes f data compression achievable k fs c generate candidate episodes calculate events shared occurrences pair candidate episodes repeat argmaxcoverlap d fs overlap d fs fs fs c end overlap d fs k delete events d corresponding currences selected episodes fs f f fs end episodes encode remaining events d f f return f run algorithm nd k best episodes large value k algorithm exits nd episodes size greater improves coding efciency algorithm needs frequency threshold given users score naturally prefer episodes higher frequency need threshold pick episodes based add coding efciency algorithm hyperparameters tg maximum allowable inter event gap critical calculating overlap score need decide type occurrences count frequency mentioned earlier uses distinct occurrences paper use non overlapped occurrences frequency episodes reason generative model present section non overlapped currences application text classication non overlapped occurrences natural choice frequency obtain sequence non overlapped occurrences distinct occurrences returned simple algorithm rst occurrence sequence distinct occurrence rst quence non overlapped occurrences onwards rst distinct occurrence starting overlapped occurrence sequence non overlapped occurrences pseudocode algorithm listed algorithm prove correctness algorithm sequence non overlapped occurrences maximal correct non overlapped frequency let h hl denote set input occstarttime list start times distinct occurrences increasing order start times n inter event gaps episode output occurrences list start times mal set non overlapping occurrences itr pointer rst element occstarttime occstarttime list return end ts itr starttime ts itr itr itr n u list t s itr starttime n s ts t ts t s p s end return end itr itr overlapped occurrences returned algorithm currence hi thought tuple indices data sequence position events data constitute occurrence example data sequence occurrence episode b c constituted events b c represented tuple notation use denote time kth event episode occurrence hi set occurrences h natural order occurrence hi earlier hj thj way occurrences h selected algorithm following property easily seen hold property earliest distinct occurrence episode hi rst distinct occurrence starting distinct occurrence starts proposition h maximal set non overlapped occurrences proof note xed interval injective serial episodes occurrences having different start times distinct sider set non overlapped occurrences episode h m let p l rst h h h th p use induction prove let rst suppose inter event gaps xed means found distinct occurrence episode starts contradicts rst statement property earliest distinct occurrence th suppose implies overlapped occurrences suppose h true set th contradicts fact property earliest distinct occurrence prove maximality set h suppose assume m l inequality occurrence contradicts h statement property distinct set occurrence non overlapped occurrences h proves maximality set h sum method nding subset serial episodes best characterizes data sequence use coding scheme described use greedy heuristic nd subset achieves best sion essentially algorithm use algorithm non overlapped occurrences episodes distinct occurrences use frequency selecting episodes best score section present interesting tive model provides statistical justication algorithm based selecting episode best score generative model episodes pairs section present class generative models specialized class hmms model motivated hmm based model single episodes proposed hmm contains markov chain state space states unobservable state symbol emitted nite symbol set according symbol ability distribution associated state stream symbols observable output sequence model case symbol set set event types observed output sequence sequence event types think event sequence event times explicitly specied occurrences frequencies general serial episodes inter event times specied time ordering event types data sequence important actual event times play role section consider serial episodes xed inter event times generative model state transition probability matrix markov chain parameterized single parameter called noise parameter pair serial episodes generative model small value noise parameter model output model event sequence containing non overlapped occurrences corresponding episodes occurrences episode non overlapped output event sequence occurrence episode arbitrarily interleaved occurrences episode good class generative model data source pair episodes form prominent frequent patterns frequency based non overlapped occurrences rst instance statistical generative model multiple episodes consider family models containing model possible pair episodes let denote model pair episodes given event sequence ask maximum likelihood estimate model class models essentially tell pair episodes best explains data sequence sense maximizing likelihood pair episodes necessarily frequent episodes data likelihood depends frequencies episodes number events data occurrences episodes share example better likelihood lower frequency overlap results present provide statistical justication coding scheme algorithm presented previous section hmm model hmm specied p p pij state transition probability matrix markov chain state space s initial state probabilities bq q s denotes symbol probability distribution state q let o ot observed symbol output sequence joint probability output sequence o state sequence q qt given hmm p o bqt ot t y determine model maximum likelihood need nd p data likelihood assessed evaluating joint probability likely state sequence q q argmax p o q follow simplication employed ods hmm models assume p p p o p o referred assumption let denote model corresponding pair episodes description model sake simplicity consider n episodes model depends episodes share event types consider separate cases necessary case common event types e j n case ii common event types state space number states hmm state space partitioned parts episode states se comprising states noise states sn comprising states episode states denoted sk j k j n noise states given n k j j n state n emission structure symbol probability distribution episode states delta function episode state j emits symbol probability j emits symbol probability noise state symbol probability distribution uniform alphabet set e denote m transition structure case share event types state transition probabilities episode states given fig case ii share event types transition probabilities episode states given state transition structure fig states mod n j mod n mod n j transition probabilities given fig mod n s mod n s mod n s j s mod n s j s mod n n j n j figure episode state transition structure mod n mod n mod n mod n mod n mod n n mod n n mod n figure transition structure mod n mod n noise states n k j k transition probability episode states structure shown fig noise state n transit probability remain n s mod n s mod n noted transition probabilities termined single parameter called noise parameter values individual transition probabilities xed intuitively simple manner state transitions noise state probability ing probability equally divided reachable episode states intuitively logic state transition structure recall state j emit symbol emit event type emit event type allows arbitrary overlap occurrences similarly j emitting event types constituting occurrence episode need contiguous episode states noise states cycle zero times coming episode states emitting event types event type emitted n j noise state transition structure given index incremented respect modulo n ne share event types suppose share event type event type appears data occurrence possibilities accounted transition structure possibility occurrence occurrences share event transition structure given fig ensures generative model includes possibility initial states initial state n probability initial state n probability probability probability probability example consider model b c d b e let alphabet set e b c d e f g example state quences output sequences length emitted fig seen gure output sequence contains occurrences arbitrarily interleaved transitions episode states given fig episode states given fig special transition structure allows occurrences share event event type b seen transition fig n j s mod n n j s mod n analysis n j n j figure noise state transition structure section derive expressions likelihood joint state output sequence hmm model use compare likelihoods models corresponding different pairs episodes expressions depend n n n n b d n f b d n g n c n n f d b e b n g n b n b b b c e c n n f n g e c c n f n d g e b b b e c g figure events sample output sequences pairs episodes share event types cases dealt separately analysis assume m m case j n episode states transition decomposing state sequence sub sequences qe qn corresponding episode noise states following observation equation transition probability state qt episode state bqt ot similarly corresponding m state sequence non zero probability write joint probability p o m denote lengths respective sequences t length output event sequence written assumption m p o monotonically increasing likely state sequence spends longest time episode states constraints imposed state transition structure state quence having non zero probability episode states corresponding particular episode occur sequence particular episode state j j revisited implies cycle types corresponding episode emitted suppose maximum possible number f non overlapping occurrences respectively share event type episode state emit symbol likely state sequence n number episode states n f n f sake simplicity assumption referred state sequence zero probability includes incomplete occurrence episodes assumption n f n f consider models p o p o n n t t m m n f p o p o f f assumption p p essentially implies given selected episode episode want select set episodes share event type selected choose frequent set case ii case episode states transition transition noted transition structure symbol emitted episode state transition occurrence episodes means event shared rences episodes hand symbol emitted episode state transition occurrence episode shared decompose episode states state sequence qe parts episode states corresponding event types shared form corresponding shared ones form state emits symbol t joint probability output state sequence given m t m let consider state sequence q having non zero probability contains f f number occurrences episodes respectively let number events shared occurrences o ensure assumption holds modifying model adding extra symbol end sequence marker end output sequence o modifying symbol probability n distribution noise states n following trick hmms single episodes p o t m p o events covered occurrences episodes output sequence n f n f o n f n f number events shared o number events shared assumption o n f n f state sequence p o m n f t t m o n f o m joint ability increasing function occurrences episodes xed f f decreasing function number events shared occurrences let f f maximum possible number overlapped occurrences respectively likely state sequence q emits number occurrences episode states state sequences shares minimum number events occurrences let number shared events corresponding q o p o t m n o episode higher data likelihood compared assumption case o o assumption easily seen p p easy o f check ply overlap overlap overlap overlap o case b o o scenario depending values overlaps metrics greater smaller consider sub cases case overlap overlap overlap overlap overlap overlap n f n f n f n f o o o o p o p o n f o o f p p n f o assumption case overlap overlap overlap overlap overlap overlap n f o o o let n f assume m o o write o n f n f n f n f similar expression model p o p o p o p o n f o o assumption f f lihood higher pair episodes share lesser number events general relative likelihood depends frequencies difference overlaps better understand let dene metrics rate episode respect episode overlap n f overlap n f o o given episode values metric episode higher p p results presented provide statistical justication algorithm presented previous section select episodes based overlap score given suppose selected want choose second episode based choice depends sign n gure merit motivated considerations coding efciency essentially difference overlap gure o o merit determines pair episodes maximize data likelihood application text classification section present novel application method nding good subset frequent episodes acterize data application domain text classication text classication techniques use words approach document data sample represented collection words belong dictionary dictionary usually considered set unique words present training corpus preliminary preprocessing makes size tionary large leading high dimensionality feature vector representation document vector space representation documents e word averaging depends largely dictionary words think text document sequence events event types words training data unsupervised fashion use method nd best subset serial episodes represent data episodes likely contain specic words important document collection dictionary built words event types found subset discovered episodes likely useful explore let dictionary obtained unique words usual preprocessing training data collection termed dictionary run algorithm ering best subset serial episodes achieve best data compression entire training corpus form new dictionary set unique words types present non singleton episodes e episodes size discovered algorithm smaller sized dictionary dictionary ii case represent documents vectors dictionaries investigate standard classiers naive bayes svm simulations standard benchmark datasets large dimensionality reduction loss accuracy classier typically training data text classication documents document short mining episodes achieve signicant compression ually document interesting episodes mainly sequence short string training data classes long document set frequent serial episodes achieve best compression algorithm cussed paper employ special symbols denote end training document modify mining algorithm occurrence episode span different documents single label text categorization cessed stemmed version datasets use class stemmed version dataset class dataset class dataset dictionary set unique words present stemmed training data apart movie review dataset prepared pang lee polarity dataset sentiment analysis dataset consist movie reviews preprocessing steps converted letters lower case removed words characters long stop words removed dictionary created preprocessed training data feature vectors compared text classication accuracies different models bag data sample converted feature vector dimension size corresponding dictionary feature represents frequency word data sample movie review dataset binary features denoting presence absence word corresponding ment tf idf cosine normalization feature vectors explained subsection average embedding vecavg produce word embeddings text represented average embeddings words present text case dictionary ii averaging word embeddings words tionary rest ignored case movie reviews newsgroup pretrained model googlenews vectors case datasets stemmed model trained gensim library parameters vector tf idf term frequency inverse document frequency tf idf merical statistic good quantifying importance word document collection let wf w d frequency number occurrences word w document d instead raw frequency feature value use modied word frequency dened m odif ied wf w d wf w d idf inverse document frequency idf w given idf log nd df w experimental results datasets nd total number documents df w number documents contain word w use compared classication accuracies dard benchmarks newsgroup webkb downloaded publicly available repository datasets cachopo org datasets single label text categorization cs cornell edu people pabo movie review com mmihaltz googlenews vectors modied frequency word m odif ied wf w feature value feature vectors cosine normalized dataset webkb newsgroup dictionary dictionary ii results compare classication accuracies obtained ing proposed dictionary ii obtained dictionary bow vecavg representation present results linear svm bow naive results presented comparison accuracies reported literature movie review dataset present mean value corresponding fold cross validation original folds introduced dataset webkb newsgroup movie review number discovered episodes size dict size dict ii table dictionary sizes different datasets table shows sizes dictionaries different datasets number episodes reported table number non singleton episodes seen table size dictionary ii fourth dictionary case webkb datasets eighth tenth method results signicant reduction dictionary size feature vector dimension classication accuracies obtained different tionaries shown tables table shows accuracies f measure linear svm classier vec avg representation table shows naive bayes linear svm classiers bow representation try nonlinear svm studies benchmark data sets reported accuracies linear svm easy accuracies f measure scores dataset accuracy f measure webkb newsgroup movie review dict dict ii dict dict ii table linear svm accuracy f vecavg sentation dataset classier accuracy f measure scores webkb newsgroup movie review nb svm nb svm nb svm nb svm dict dict ii dict dict ii table naive bayes linear svm classication accuracy f bow representation table mean standard deviation classication accuracy naive bayes different dictionaries bow representation dataset webkb newsgroup dictionary dictionary ii table mean standard deviation classication accuracy linear svm different dictionaries bow representation scores bow vecavg representation achieved classier different dictionaries close conclude frequent episodes based method allows large tion dictionary size signicant change classication accuracy note accuracy dictionary table consistent bag words accuracy reported train test split given original datasets bow representation generated random splits datasets webkb newsgroup having train test distribution class original split results showing averages standard deviations presented tables results clearly signicant differences accuracies achieved tionaries bow representation document cation application method learning dictionary results signicant decrease feature vector sion method different generic mensionality reduction techniques pca pca dimensionality reduction choosing certain linear combinations earlier features original feature vector dimension tens thousands new features obtained linear combinations semantically interpretable data mining method essentially decides words retained rejected method essentially feature selection method dimensionality reduction method ality reduction achieved semantically interpretable feel data mining present sample words retained rejected method case movie review webkb datasets words shown hand picked set randomly selected words easy makes good semantic sense example movie review reject movie related words like stunts theater performances appear reviews carry information sentiment review hand retain words like hilarious boring surprised carry sentiment information similar comments apply webkb dataset e selected words like prerequisite introductory project commonly found project course web page carry dataset movie review sentiment negative sentiment stunts theatre cinematographer moviestar directorship producers storyteller scripts spotlight audition auditorium backstage torrent reviewer performances entertainment enjoyable funny hilarious entertaining superb boring sleepy disappointed twists clever impressed surprised liked interested awful pleasing miserably dumber interesting impressive intelligent fantastic webkb chemistry cryptography probabilistic lagrangian arithmetic scholarship bibtex manuscript newsletter computer interdisciplinary mathematician biotechnology accuracy baseline neurocomputing gaussian syllabus internet introductory prerequisite research bibliography professor student quiz exercise credit query tutor project phd fellowship conference curriculum scientist magazine instructor theorem homework examination semester journal homepage rejected words selected words table sample words set rejected selected words dictionary ii tive information data mining method based nding episodes compressing data effective picking dictionary relevant text corpus conclusions paper considered problem discovering small set serial episodes characterize sequential data extended existing algorithm work non overlapped frequency main contribution novel hmm based ative model pairs episodes model generates general output sequences episodes prominent frequent episodes overlapped frequency model intuitive symbols emitted episode states constitute based occurrences episodes noise states emit symbol symbols emitted noise states thought distracting signal mask real episodes contribute spurious frequent episodes transition structure intuitively motivated state transitions noise state probability remaining probability equally divided reachable episode states model class showed episode pair model best likelihood data sequence determined frequencies episodes overlaps occurrences analytical expressions derived data likelihoods provide statistical justication algorithm selecting subset episodes algorithm motivated based mdl principle intuitively appealing coding scheme encode data episodes algorithm nds subset episodes maximize data compression achieved essentially incrementally picking episodes based called overlap score depends frequency episode extent overlap occurrences selected episodes hmm based model provides statistical justication strategy algorithm generative model sequential data capture teractions episodes justify mdl based algorithm frequent episodes novel contributions paper mentioned section algorithms motivated mdl philosophy succinctly characterizing data small set frequent patterns algorithms sequential data heuristic nature believe hmm model presented good rst step developing statistical theory mdl based algorithms nd good subset frequent episodes important contribution paper novel application frequent episodes mining text tion view text document sequence events event types words nd subset episodes best characterizes entire text corpus terms data compression words appearing subset frequent episodes likely gives formative words corpus use words form dictionary documents represented vectors method amounts learning context sensitive dictionary idea quent pattern mining data mining method need user specied hyperparameters true method dimensionality reduction best knowledge rst instance application frequent pattern methods dictionary learning showed extensive simulations method results fold decrease size dictionary compromising classication accuracy seen examples retained rejected words method effective learning good subset words hmm model presented pairs episodes principle extendable number episodes notationally complex good extension work presented direction extending analytical techniques arbitrary number episodes generative models general sessing statistical signicance frequency episode e model introduced accounts interactions episodes usable questions observed frequencies episodes signicant given extent overlap occurrences useful direction work presented extended references c c aggarwal j han frequent pattern mining springer j vreeken m van leeuwen siebes krimp mining itemsets compress data mining knowledge discovery vol pp n tatti j vreeken long short summarising event sequences serial episodes proceedings acm sigkdd international conference knowledge discovery data mining acm pp m mampaey n tatti j vreeken tell need know succinctly summarizing data itemsets proceedings acm sigkdd international conference knowledge discovery data mining acm pp h t lam f m orchen d fradkin t calders mining pressing sequential patterns statistical analysis data mining vol pp ibrahim s sastry p s sastry discovering compressing serial episodes event sequences knowledge information systems vol pp bhattacharyya j vreeken efciently summarizing event sequences rich interleaving patterns proceedings siam international conference data mining siam q fan y li d zhang k tan discovering thy themes sequenced data step computational journalism ieee transactions knowledge data engineering vol pp h mannila h toivonen inkeri verkamo discovery frequent episodes event sequences data mining knowledge discovery vol pp r gwadera m j atallah w szpankowski reliable tion episodes event sequences knowledge information systems vol pp n tatti signicance episodes based minimal windows data mining ninth ieee international conference ieee pp r gwadera f crestani ranking sequential patterns respect signicance advances knowledge discovery data mining pp c low kam c rassi m kaytoue j pei mining cally signicant sequential patterns data mining icdm ieee international conference ieee pp s laxman p s sastry k p unnikrishnan discovering frequent episodes learning hidden markov models formal connection ieee transactions knowledge data engineering vol pp p d grunwald minimum description length principle vol cambridge ma mit press j v matthijs van leeuwen mining sets patterns compression frequent pattern mining c c aggarwal j han eds springer ch x ao p luo j wang f zhuang q mining positioning episode rules event sequences ieee transactions knowledge data engineering vol pp achar s laxman p s sastry unied view apriori based algorithms frequent episode discovery edge information systems vol pp s laxman v tankasali r w white stream prediction generative model based frequent episodes event sequences proceedings acm sigkdd international conference knowledge discovery data mining acm pp r socher perelygin j wu j chuang c d manning ng c potts recursive deep models semantic ity sentiment treebank proceedings conference empirical methods natural language processing pp b pang l lee sentimental education sentiment analysis subjectivity proceedings acl pp cardoso cachopo improving methods single label text categorization pdd thesis instituto superior tecnico dade tecnica de lisboa s wang c d manning baselines bigrams simple good sentiment topic classication proceedings annual meeting association computational linguistics short volume association computational linguistics pp
